from fastapi import FastAPI, UploadFile, File
import uvicorn
import numpy as np
import tensorflow as tf
from io import BytesIO

app = FastAPI()

# Load the ML model (Example: Image classification model)
model = tf.keras.models.load_model("model.h5")

def predict(image_bytes):
    image = tf.image.decode_jpeg(image_bytes, channels=3)
    image = tf.image.resize(image, [224, 224]) / 255.0
    image = np.expand_dims(image, axis=0)
    prediction = model.predict(image)
    return prediction.tolist()

@app.post("/predict")
async def classify_image(file: UploadFile = File(...)):
    image_bytes = await file.read()
    prediction = predict(image_bytes)
    return {"prediction": prediction}

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)
